package ca.cmpt213.as2.ui;

import ca.cmpt213.as2.gamelogic.Tank;
import ca.cmpt213.as2.gamelogic.TankPlacement;

import java.util.ArrayList;
import java.util.List;

/**
 * Class for displaying game board and applying all logic for shots fired by user.
 * Creates Tank objects distributed by coordinates generated by TankPlacement.
 * Interacts with user and displays hit and miss, plus tank damage to the fortress
 */
public class GameBoard {
    private static String[][] board;
    private static final char[] LETTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".toCharArray();
    private static Tank tankA;
    private static Tank tankB;
    private static Tank tankC;
    private static Tank tankD;
    private static Tank tankE;
    private List<String> usedCoordinates;


    public GameBoard(int sizeGrid) {
        board = new String[sizeGrid + 1][sizeGrid + 1];
        createGameBoard();
        displayBoard();
        usedCoordinates = new ArrayList<>();
        TankPlacement tankPlacment = new TankPlacement();
        //String a = tankPlacment.randomPlacement();
        tankA = new Tank(tankPlacment.randomPlacement());
        tankB = new Tank(tankPlacment.randomPlacement());
        tankC = new Tank(tankPlacment.randomPlacement());
        tankD = new Tank(tankPlacment.randomPlacement());
        tankE = new Tank(tankPlacment.randomPlacement());
    }

    private void createGameBoard() {
        board[0][0] = " ";
        for (int i = 1; i < board[0].length; i++) {
            board[i][0] = String.valueOf(i);
        }
        for (int j = 1; j <= board.length - 1; j++) {
            board[0][j] = String.valueOf(LETTERS[j - 1]);
            for (int i = 1; i < board[0].length; i++) {
                board[i][j] = "~";
            }
        }
    }

    public void displayBoard() {
        System.out.println("Game Board:");
        for (int j = 0; j < board.length; j++) {
            for (int i = 0; i < board[0].length; i++) {
                final int largeGridSize = 9;
                if (i == 0) {
                    System.out.print("\t");
                }
                if (i > largeGridSize && j == 0) {
                    System.out.print(" " + board[i][0]);
                } else {
                    System.out.print(" " + board[i][j] + " ");
                }
            }
            System.out.println();
        }
    }

    public void fireShotCoordinate(String coordinate) {
        int[] coordinatesConverted = parseCoordinate(coordinate.toLowerCase());
        int xCoordinate = coordinatesConverted[0];
        int yCoordinate = coordinatesConverted[1];
        if (tankA.isHit(coordinate.toLowerCase())) {
            System.out.println("HIT!");
            board[xCoordinate][yCoordinate] = "X";
        } else if (tankB.isHit(coordinate.toLowerCase())) {
            System.out.println("HIT!");
            board[xCoordinate][yCoordinate] = "X";
        } else if (tankC.isHit(coordinate.toLowerCase())) {
            System.out.println("HIT!");
            board[xCoordinate][yCoordinate] = "X";
        } else if (tankD.isHit(coordinate.toLowerCase())) {
            System.out.println("HIT!");
            board[xCoordinate][yCoordinate] = "X";
        } else if (tankE.isHit(coordinate.toLowerCase())) {
            System.out.println("HIT!");
            board[xCoordinate][yCoordinate] = "X";
        } else {
            System.out.println("Miss.");
            board[xCoordinate][yCoordinate] = ".";
        }
    }

    public int tankFireAll() {
        int totalDamage = 0;
        if (!tankA.outOfCommission()) {
            totalDamage += tankA.getFirePower();
            System.out.println("You were shot for " + tankA.getFirePower() + "!");
        }
        if (!tankB.outOfCommission()) {
            totalDamage += tankB.getFirePower();
            System.out.println("You were shot for " + tankB.getFirePower() + "!");
        }
        if (!tankC.outOfCommission()) {
            totalDamage += tankC.getFirePower();
            System.out.println("You were shot for " + tankC.getFirePower() + "!");
        }
        if (!tankD.outOfCommission()) {
            totalDamage += tankD.getFirePower();
            System.out.println("You were shot for " + tankD.getFirePower() + "!");
        }
        if (!tankE.outOfCommission()) {
            totalDamage += tankE.getFirePower();
            System.out.println("You were shot for " + tankE.getFirePower() + "!");
        }
        return totalDamage;
    }

    public void revealAll() {
        for (int j = 1; j < board.length; j++) {
            for (int i = 1; i < board[0].length; i++) {
                String coordinate = String.valueOf(LETTERS[j - 1]).toLowerCase() + String.valueOf(i);
                if (board[i][j].equals("~")) {
                    if (tankA.isHit(coordinate) || tankB.isHit(coordinate) ||
                            tankC.isHit(coordinate) || tankD.isHit(coordinate) || tankE.isHit(coordinate)) {
                        board[i][j] = "O";
                    } else {
                        board[i][j] = " ";
                    }
                }
            }
        }
        displayBoard();
    }

    private static int[] parseCoordinate(String coordinate) {
        int xCoordinate = Integer.parseInt(coordinate.substring(1));
        int yCoordinate = coordinate.charAt(0) - 'a' + 1;
        return new int[]{xCoordinate, yCoordinate};
    }


}
